{"version":3,"sources":["main.scss","../../node_modules/bourbon/app/assets/stylesheets/css3/_flex-box.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_prefixer.scss","../../node_modules/bourbon/app/assets/stylesheets/addons/_position.scss"],"names":[],"mappings":"AAkBA,KACE,yBAfkB,AAgBlB,8DAR4E,AAS5E,cAlBuB,AAmBvB,kCAAmC,AACnC,6CAA+C,AAC/C,iBAAkB,AAClB,kBAAmB,AC4CjB,oBAAqB,AACrB,iBAAkB,AAClB,YAAa,AAIb,kBAAmB,AACnB,oBAAqB,AACrB,aAAc,AC1CV,4BDyFiB,ACzEjB,oBDyEiB,ACzFjB,6BDiFY,ACjEZ,qBDiEY,AC7EZ,2BFZwB,AEwBxB,sBFxBwB,AC+G9B,yBD/G8B,CAM/B,AAJC,oCAXF,KAYI,qGAAqE,AACrE,qBAAuB,CAE1B,CAAA,AAED,KEAQ,mBFCS,AEeT,WFfS,AEGT,YFHS,AEOT,WFPS,AEeT,MFfS,CAOhB,AALC,oCAHF,KCkCI,oBAAqB,AACrB,iBAAkB,AAClB,YAAa,AAIb,kBAAmB,AACnB,oBAAqB,AACrB,aAAc,AC1CV,4BDyFiB,ACzEjB,oBDyEiB,ACzFjB,6BDiFY,ACjEZ,qBDiEY,AC7EZ,2BFC0B,AEW1B,sBFX0B,ACkGhC,0BDlGgC,AEL1B,qBD6KW,AC7JX,aD6JW,ACzKX,8BFE6B,AEE7B,6BFF6B,AEM7B,4BFN6B,AEU7B,yBFV6B,ACqLnC,iBAdiB,CDrKlB,CAAA,AAED,MACE,qGAAqE,AACrE,sBAAuB,AACvB,0BAAkC,AAClC,kBAAmB,AACnB,UAAY,CAwBb,AAtBC,oCAPF,MAQI,gBAAiB,AACjB,SAAW,CAoBd,CAAA,AA7BD,SAaI,0BAxDc,AAyDd,WAtDc,AAuDd,eAAgB,AAChB,SAAU,AACV,aAAc,AACd,kBAAmB,AGvBrB,kBHwB4B,AGpBxB,QHoBgC,AGpBhC,SHoBkC,AGpBlC,MHoBoC,CASvC,AAPC,oCArBJ,SAsBM,gBAAiB,AACjB,eA1DgB,AA2DhB,cAAe,AACf,UAAW,AACX,eAAiB,CAEpB,CAAA,AAGH,cACE,oBAAqB,AACrB,gBAAkB,CAMnB,AAJC,oCAJF,cAKI,0BA/Ec,AAgFd,UA7Ec,CA+EjB,CAAA,AAED,UCjBI,oBAAqB,AACrB,iBAAkB,AAClB,YAAa,AAIb,kBAAmB,AACnB,oBAAqB,AACrB,YAAc,CDoBjB,AAXD,sBAII,mBAAoB,AEvDhB,mBFwDW,AExCX,WFwCW,AEpDX,YFoDW,AEhDX,WFgDW,AExCX,MFwCW,CAKhB,AAVH,oCAQM,UAAY,CACb,AAIL,cACE,WAlGgB,AAmGhB,eA9FoB,AA+FpB,eAAgB,AAChB,YAAc,CACf,AAED,OACE,sBAAuB,AACvB,WAvGgB,AAwGhB,eAtGoB,AAuGpB,aAAc,AACd,UAAY,CAKb,AAHC,oCAPF,OAQI,iBAAmB,CAEtB,CAAA","file":"main.css","sourcesContent":["@import 'bourbon';\n\n$color-black: #000;\n$color-dark-grey: #515151;\n$color-grey: #dbdfe2;\n$color-white: #fff;\n\n$font-size-small: 14px;\n$font-size-base: 16px;\n$font-size-large: 24px;\n$font-size-jumbo: 36px;\n\n$font-family-sans: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\n$bp-tablet: 768px;\n\n$trumpPhoto: 'https://c1.staticflickr.com/9/8105/8567825104_e14db572a1_k.jpg';\n\nbody {\n  background-color: $color-grey;\n  font: $font-size-base $font-family-sans;\n  color: $color-dark-grey;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased !important;\n  min-height: 100vh;\n  overflow-x: hidden;\n  @include display(flex)\n  @include flex-direction(column);\n\n  @media screen and (min-width: $bp-tablet) {\n    background: $color-dark-grey url($trumpPhoto) center center no-repeat;\n    background-size: cover;\n  }\n}\n\nmain {\n  @include flex(1);\n\n  @media screen and (min-width: $bp-tablet) {\n    @include display(flex);\n    @include flex-direction(column);\n    @include justify-content(flex-end);\n  }\n}\n\n.hero {\n  background: $color-dark-grey url($trumpPhoto) center center no-repeat;\n  background-size: cover;\n  padding: percentage(1365/2048) 0 0;\n  position: relative;\n  width: 100%;\n\n  @media screen and (min-width: $bp-tablet) {\n    background: none;\n    padding: 0;\n  }\n\n  h1 {\n    background: rgba($color-black, 0.6);\n    color: $color-white;\n    font-size: 24px;\n    margin: 0;\n    padding: 15px;\n    text-align: center;\n    @include position(absolute, null 0 0 0);\n\n    @media screen and (min-width: $bp-tablet) {\n      background: none;\n      font-size: $font-size-jumbo;\n      margin: 20px 0;\n      padding: 0;\n      position: static;\n    }\n  }\n}\n\n.main-content {\n  padding-bottom: 20px;\n  padding-top: 20px;\n\n  @media screen and (min-width: $bp-tablet) {\n    background: rgba($color-black, 0.6);\n    color: $color-white;\n  }\n}\n\n.form-row {\n  @include display(flex);\n\n  .form-group {\n    padding-right: .5em;\n    @include flex(1);\n\n    .form-control {\n      width: 100%;\n    }\n  }\n}\n\n.form-message {\n  color: $color-black;\n  font-size: $font-size-small;\n  margin: 0 0 1em;\n  padding: 10px;\n}\n\nfooter{\n  background-color: #000;\n  color: $color-white;\n  font-size: $font-size-small;\n  padding: 15px;\n  width: 100%;\n\n  @media screen and (min-width: $bp-tablet) {\n    text-align: center;\n  }\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n"],"sourceRoot":"/source/"}